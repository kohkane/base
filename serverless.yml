service:
  name: base

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-aws-documentation

provider:
  name: aws
  runtime: nodejs8.10
  region: us-east-1
  profile: kohkane_serverless
  stage: ${opt:stage, 'dev'}
  tracing: true
  apiName: api.kohkane.com
  deploymentBucket:
    name: com.kohkane.deploys
    serverSideEncryption: AES256
  apiKeys:
    - ${self:provider.stage}-key
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        - "arn:aws:s3:::stashes.kohkane.com"
        - "arn:aws:s3:::stashes.kohkane.com/*"
    -  Effect: "Allow"
       Action:
         - "s3:ListBucket"
       Resource: "arn:aws:s3:::com.kohkane.deploy"
    -  Effect: "Allow"
       Action:
         - "s3:PutObject"
       Resource: "arn:aws:s3:::com.kohkane.deploy/*"

package:
  individually: true
  exclude:
    - ".*/**"

custom:
  serverless-offline:
    port: '3000'
    host: '0.0.0.0'
  documentation:
    info:
      version: "0.0.1"
      title: The API for Kohkane
      description: The API that powers all of the Kohkane products
      termsOfService: https://kohkane.com/tos
      contact:
        name: Jordan Skomer
        url: https://kohkane.com
        email: dev@kohkane.com
      license:
        name: MIT
        url: https://kohkane.com/license
    models:
      -
        name: ErrorResponse
        description: "The response that gets returned when an error is encountered"
        contentType: "application/json"
        schema: ${file(src/schemas/ErrorResponse.json)}
      -
        name: VersionsGetResponse
        description: "The response that gets returned from GET /version/{id?}, GET /version/current, and GET /versions"
        contentType: "application/json"
        schema: ${file(src/schemas/VersionsGetResponse.json)}
  commonModelSchemaFragments:
    MethodResponse400Json:
      statusCode: "400"
      responseModels:
        "application/json": ErrorResponse
    MethodResponse401Json:
      statusCode: "401"
      responseModels:
        "application/json": ErrorResponse
    MethodResponse403Json:
      statusCode: "403"
      responseModels:
        "application/json": ErrorResponse
    MethodResponse404Json:
      statusCode: "404"
      responseModels:
        "application/json": ErrorResponse

functions:
  - ${file(src/functions/versions/versions.yml)}

